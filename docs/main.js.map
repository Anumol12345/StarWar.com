{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/server.service.ts","./src/app/components/planets/planets.component.html","./src/app/components/planets/planets.component.ts","./src/app/components/residents/residents.component.html","./src/app/components/residents/residents.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router:Router){\n\n  }\n  GetStart(){\n    this.router.navigate([\"planets\"]);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home_page\">\n   <div class=\"row m-0 justify-content-center\">\n    <div class=\"col-xl-6 col-lg-8 col-md-8 col-sm-11 col-11\">\n        <h1 class=\"home_head\">WELCOME TO STAR WARS UNIVERSE</h1>\n    </div>\n   </div>\n    <button class=\"btn startBtn\" (click)=\"GetStart()\">Get Planets</button>\n   \n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n\n  constructor( private http: HttpClient,) { }\n\n  public callService(apiUrl): Observable<any> {\n    return this.http.get(apiUrl);\n  }\n}\n","<div class=\"plan_page\">\n  <div class=\"spinner\" *ngIf =\"loading\">\n    <img  src=\"assets/images/spin.gif\" >\n  </div>\n\n\n  <div class=\"page\" [hidden] = \"loading\">\n        <h1 class=\"main_head\">Star war planets</h1>\n       \n    \n    <div class=\"row m-0 justify-content-center\">\n      <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 \" *ngFor=\"let item of FstPageData\">\n        <div class=\"planet_card\" >\n          <p class=\"name_head text-center\">{{item.name}}</p>\n          \n          <div class=\"row m-0 content_row\">\n            <div class=\"col-12 text-start\">\n              <p class=\"text \"> Climate  </p> \n              <p class=\"value\">  {{item.climate }}</p> \n            </div>\n            <div class=\"col-12 text-end \">\n              <p class=\"text\"> Population  </p>\n              <p class=\"value\">  {{item.population }}</p>  \n            </div>\n          \n            <div class=\"col-12 text-start\">\n              <p class=\"text \"> Terrain </p> \n              <p class=\"value long_text\"> {{item.terrain }}</p>  \n            </div>\n          </div>\n         \n         \n          <a href=\"javascript:void(0)\" (click)=\"toResidents(item)\" class=\"res_link\">Residents <span class=\"fa fa-angle-double-right action_icon\"></span></a>\n       </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"nextContent\" [hidden] = \"loading\">\n    <div class=\"row m-0 justify-content-center\">\n      <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-7 page_col\">\n         <div class=\"pagination\">\n          <button class=\"btn select_btns\" (click)=\"prevPage()\" [disabled]=\"this.planets.previous == null\">\n            <i class=\"fa fa-chevron-left\"></i>\n          </button>\n          <div class=\"page_txt\">\n            <p >{{page}}</p> \n          </div>\n          <button class=\"btn select_btns\" (click)=\"nextPage()\" [disabled]=\"this.planets.next == null\">\n            <i class=\"fa fa-chevron-right\"></i>\n          </button>\n         </div>\n      </div>\n    </div>\n \n   \n  </div>\n  \n\n</div>\n\n  \n \n  \n\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.component.html',\n  styleUrls: ['./planets.component.scss']\n})\nexport class PlanetsComponent implements OnInit {\n  page:any=1;\n  planets:any =[];\n  loading = true;\n  \n  FstPageData: any;\n  apiUrl: any;\n  constructor(private router :Router , private serverservice: ServerService ,private activatedRoute:ActivatedRoute){\n\n    this.activatedRoute.queryParams.subscribe((params) => {\n      if(params[\"page\"]){\n        this.page = params[\"page\"];\n      }\n      \n    });\n\n  }\n   ngOnInit() {\n    this.apiUrl = \"https://swapi.dev/api/planets/?page=\"+this.page\n    this.getData();\n   \n  }\n\n  //To get next page data\n  nextPage(){\n   \n    this.page++;\n    this.apiUrl = this.planets.next;\n    this.getData();\n  }\n\n  //To get previous page data\n  prevPage(){\n    this.page--;\n    this.apiUrl = this.planets.previous ;\n    this.getData();\n  }\n\n  //To redirect to residents list page\n  toResidents(resdata){\n   let url =  resdata.url.split(\"/\");\n   const id = url[url.length - 2];\n\n  \n    this.router.navigate([\"residents\"],{queryParams:{\n     planetId:id, page: this.page \n    },});\n    \n  }\n\n  //To get planet data\n getData(){\n  this.loading = true;\n  this.serverservice.callService( this.apiUrl ).subscribe((data)=>{\n    this.loading = false;\n    console.log(data);\n    this.planets =  data\n    this.FstPageData = this.planets.results;\n    \n  });\n\n}\n\n}\n","<div class=\"res_page\">\n    <div class=\"spinner\" *ngIf =\"loading\">\n        <img  src=\"assets/images/spin.gif\" >\n      </div>\n\n      <div class=\"page\" [hidden] =\"loading || ResArray.length == 0\">\n        \n        <div class=\"row m-0\">\n          <div class=\"col-xl-9 col-lg-9 col-md-8 col-sm-7 col-12\">\n            <h1 class=\"main_head\">Residents</h1>\n          </div>\n          <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-12 text-end\">\n            <button class=\"btn backBtn\" (click)=\"backTo()\">Back to planets</button>\n          </div>\n        </div>\n       \n        <div class=\"row m-0 justify-content-center\">\n          <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 \" *ngFor=\"let item of ResArray\">\n            <div class=\"res_card\" >\n              <img class=\"user_img\" src=\"assets/images/user.png\" >\n              <p class=\"name_head text-center\">{{item.data.name}}</p>\n              <div class=\"row m-0 justify-content-center gen_row\">\n                <div class=\"col-4 text-start\">\n                  <p  class=\"res_txt\">Gender</p>\n                  <p class=\"res_val\">{{item.data.gender }}  </p>\n                </div>\n                <div class=\"col-4 text-center\">\n                  <p class=\"res_txt\">Height</p>\n                  <p class=\"res_val\">{{item.data.height }}  </p>\n                </div>\n                  <div class=\"col-4 text-end\">\n                    <p  class=\"res_txt\">Mass</p>\n                    <p class=\"res_val\">{{item.data.mass }}  </p>\n                    </div>\n                  </div>\n                  \n              </div>\n            \n          </div>\n        </div>\n      </div>\n\n      <p *ngIf =\"!loading && ResArray.length == 0\" class=\"noRes\">No Residents Here</p>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-residents',\n  templateUrl: './residents.component.html',\n  styleUrls: ['./residents.component.scss']\n})\nexport class ResidentsComponent implements OnInit {\n  apiUrl:any = \"https://swapi.dev/api/planets/\";\n  planetId: any;\n  page: any;\n  loading = true;\n  resArray: any=[];\n  ResArray: any=[];\n  constructor(private activatedRoute: ActivatedRoute ,private router :Router,\n    private serverservice: ServerService) {  \n    this.activatedRoute.queryParams.subscribe((params) => {\n    this.planetId = params[\"planetId\"];\n    this.page = params[\"page\"];\n  });}\n\n  ngOnInit(): void {\n    this.getResidents();\n  }\n\n  //To get residence list of planet\n  getResidents(){\n    this.serverservice.callService( this.apiUrl + this.planetId).subscribe((data:any)=>{\n      \n        var DataAr = data.residents;\n        if( DataAr.length > 0){\n\n         for(var i =0 ;i < DataAr.length;i++){\n          var url = DataAr[i].split(\"/\");\n          var id = url[url.length - 2];\n           this.getRes(DataAr[i] ,id);\n         }\n          setTimeout(() => {\n            this.resArray.sort(function(a, b) { \n              return a.id - b.id ;\n            });\n            this.ResArray = this.resArray;\n            this.loading = false;\n          }, 800);\n        }\n\n        else{\n          this.loading = false;\n        }\n     \n      });\n  }\n  \n  //To get residence data\n  getRes(element:any , id:any) {\n    this.serverservice.callService(element).subscribe((data) => {\n      this.resArray.push({\n        id:id,\n        data:data\n      });\n\n   })\n  }\n\n\n  //Back to planet page\n  backTo(){\n    this.router.navigate([\"planets\"],{queryParams:{\n      page: this.page\n    },});\n  }\n  \n}\n","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  {\n  title = 'StarWars';\n  navbarOpen = false;\n\n  toggleNavbar() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n}\n","\n\n<nav class=\"navbar navbar-expand-lg navbar-dark header_nav fixed-top\">\n  <a class=\"navbar-brand\" href=\"javascript:void(0)\"><img class=\"logo logo_img\" src=\"assets/images/logo.png\"></a>\n  <button aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"\n      data-target=\"#navbar1\" data-toggle=\"collapse\"  type=\"button\" (click)=\"toggleNavbar()\">\n      <span class=\"navbar-toggler-icon\"></span></button>\n  <div class=\"collapse navbar-collapse\"  id=\"navbar1\" [ngClass]=\"{'show': navbarOpen}\"\n      >\n      <ul class=\"navbar-nav \">\n          <li class=\"nav-item\">\n              <a class=\"nav-link navItemHeader_item\" routerLinkActive=\"active-route\" routerLink=\"/home\"\n              (click)=\"navbarOpen=false\"  >Home <span class=\"sr-only\">(current)</span></a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a class=\"nav-link navItemHeader_item\" routerLinkActive=\"active-route\" routerLink=\"/planets\"\n            (click)=\"navbarOpen=false\" >Planets </a>\n        </li>\n      </ul>\n  </div>\n</nav>\n<div class=\"rout_class\">\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PlanetsComponent } from './components/planets/planets.component';\nimport { ResidentsComponent } from './components/residents/residents.component';\nimport { RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlanetsComponent,\n    ResidentsComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RouterModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PlanetsComponent } from './components/planets/planets.component';\nimport { ResidentsComponent } from './components/residents/residents.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"/home\",\n    pathMatch: \"full\",\n  },\n  {\n    path:\"home\",\n    component:HomeComponent\n  },\n  {\n  path:\"planets\",\n  component:PlanetsComponent\n},\n{\n  path:\"residents\",\n  component:ResidentsComponent\n}\n];\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}